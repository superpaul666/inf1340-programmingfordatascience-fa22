{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: openpyxl in /opt/conda/lib/python3.8/site-packages (3.0.10)\r\n",
      "Requirement already satisfied: et-xmlfile in /opt/conda/lib/python3.8/site-packages (from openpyxl) (1.1.0)\r\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "!pip install openpyxl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "excel_name = 'https://github.com/shionguha/inf1340-programmingfordatascience-fa22/raw/60b7f5d757553308a4b5db8c439c360ea244e07d/project%20data/UN_MigrantStockTotal_2015.xlsx'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def update_one_table(table, sheet_title, gender):\n",
    "    table = table.rename(columns={'Unnamed: 3': 'Country Code'})\n",
    "    \n",
    "    table_gender = table[['Country Code', 1990, 1995, 2000, 2005, 2010, 2015]]\n",
    "    # Move year to cells\n",
    "    table_gender = table_gender.melt(id_vars = \"Country Code\", var_name = \"year\", value_name = sheet_title)\n",
    "    # Create a gender column and fill with both sexes\n",
    "    table_gender['gender'] = gender\n",
    "    \n",
    "    table_gender = table_gender.replace('..', np.nan).astype({\"year\": int, \"gender\": 'string', sheet_title: float})\n",
    "    \n",
    "    return table_gender\n",
    "    \n",
    "\n",
    "def update_tables(table, sheet_title):\n",
    "    table.rename(columns={'Unnamed: 3': 'Country Code'}, inplace=True)\n",
    "    \n",
    "    # process both sexes\n",
    "    table_both = table[['Country Code', 1990, 1995, 2000, 2005, 2010, 2015]]\n",
    "    # Move year to cells\n",
    "    table_both = table_both.melt(id_vars = \"Country Code\", var_name = \"year\", value_name = sheet_title)\n",
    "    # Create a gender column and fill with both sexes\n",
    "    table_both['gender'] = 'both sexes'\n",
    "    \n",
    "    # process male\n",
    "    male_columns = ['1990.1', '1995.1', '2000.1', '2005.1', '2010.1', '2015.1']\n",
    "    table_male = table[['Country Code'] + male_columns]\n",
    "    table_male = table_male.rename(columns={col: int(col[:-2]) for col in male_columns})\n",
    "    # Move year to cells\n",
    "    table_male = table_male.melt(id_vars = \"Country Code\", var_name = \"year\", value_name = sheet_title)\n",
    "    # Create a gender column and fill with male\n",
    "    table_male['gender'] = 'male'\n",
    "    \n",
    "    # process female\n",
    "    female_columns = ['1990.2', '1995.2', '2000.2', '2005.2', '2010.2', '2015.2']\n",
    "    table_female = table[['Country Code'] + female_columns]\n",
    "    table_female = table_female.rename(columns={col: int(col[:-2]) for col in female_columns})\n",
    "    # Move year to cells\n",
    "    table_female = table_female.melt(id_vars = \"Country Code\", var_name = \"year\", value_name = sheet_title)\n",
    "    # Create a gender column and fill with female\n",
    "    table_female['gender'] = 'female'\n",
    "    \n",
    "    # concat the data for all genders\n",
    "    table = pd.concat([table_both, table_male, table_female])\n",
    "    table = table.replace('..', np.nan).astype({\"year\": int, \"gender\": 'string', sheet_title: float})\n",
    "    return table"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Process Table 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 4770 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                                   Non-Null Count  Dtype  \n",
      "---  ------                                   --------------  -----  \n",
      " 0   Country Code                             4770 non-null   int64  \n",
      " 1   year                                     4770 non-null   int64  \n",
      " 2   International migrant stock at mid-year  4725 non-null   float64\n",
      " 3   gender                                   4770 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 186.3 KB\n"
     ]
    }
   ],
   "source": [
    "table = pd.read_excel(excel_name, sheet_name=\"Table 1\", header=15)\n",
    "table1 = update_tables(table, 'International migrant stock at mid-year')\n",
    "table1.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Process Table 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 4770 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                        Non-Null Count  Dtype  \n",
      "---  ------                        --------------  -----  \n",
      " 0   Country Code                  4770 non-null   int64  \n",
      " 1   year                          4770 non-null   int64  \n",
      " 2   Total population at mid-year  4386 non-null   float64\n",
      " 3   gender                        4770 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 186.3 KB\n"
     ]
    }
   ],
   "source": [
    "table = pd.read_excel(excel_name, sheet_name=\"Table 2\", header=15)\n",
    "table2 = update_tables(table, 'Total population at mid-year')\n",
    "table2.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Process Table 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 4770 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                                                               Non-Null Count  Dtype  \n",
      "---  ------                                                               --------------  -----  \n",
      " 0   Country Code                                                         4770 non-null   int64  \n",
      " 1   year                                                                 4770 non-null   int64  \n",
      " 2   International migrant stock as a percentage of the total population  4343 non-null   float64\n",
      " 3   gender                                                               4770 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 186.3 KB\n"
     ]
    }
   ],
   "source": [
    "table = pd.read_excel(excel_name, sheet_name=\"Table 3\", header=15)\n",
    "table3 = update_tables(table, 'International migrant stock as a percentage of the total population')\n",
    "table3.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Process Table 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1590 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                                                       Non-Null Count  Dtype  \n",
      "---  ------                                                       --------------  -----  \n",
      " 0   Country Code                                                 1590 non-null   int64  \n",
      " 1   year                                                         1590 non-null   int64  \n",
      " 2   Migrants as a percentage of the international migrant stock  1575 non-null   float64\n",
      " 3   gender                                                       1590 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 49.8 KB\n"
     ]
    }
   ],
   "source": [
    "table4 = pd.read_excel(excel_name, sheet_name='Table 4', header=15)\n",
    "# Only female is needed, so call update_one_table\n",
    "table4 = update_one_table(table4, 'Migrants as a percentage of the international migrant stock', 'female')\n",
    "table4.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Process Table 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Unnamed: 0': 'Unnamed: 0',\n",
       " 'Unnamed: 1': 'Unnamed: 1',\n",
       " 'Unnamed: 2': 'Unnamed: 2',\n",
       " 'Unnamed: 3': 'Unnamed: 3',\n",
       " 'Unnamed: 4': 'Unnamed: 4',\n",
       " '1990-1995': 1995,\n",
       " '1995-2000': 2000,\n",
       " '2000-2005': 2005,\n",
       " '2005-2010': 2010,\n",
       " '2010-2015': 2015,\n",
       " '1990-1995.1': '1995.1',\n",
       " '1995-2000.1': '2000.1',\n",
       " '2000-2005.1': '2005.1',\n",
       " '2005-2010.1': '2010.1',\n",
       " '2010-2015.1': '2015.1',\n",
       " '1990-1995.2': '1995.2',\n",
       " '1995-2000.2': '2000.2',\n",
       " '2000-2005.2': '2005.2',\n",
       " '2005-2010.2': '2010.2',\n",
       " '2010-2015.2': '2015.2'}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "table5 = pd.read_excel(excel_name, sheet_name=\"Table 5\", header=15)\n",
    "# rename columns year1-year5 -> year5\n",
    "renames = {}\n",
    "for col in table5.columns:\n",
    "    new_col = col\n",
    "    if col.find('-') > -1:\n",
    "        new_col = col[5:]\n",
    "        if col.find('.') == -1:\n",
    "            new_col = int(new_col)\n",
    "    renames[col] = new_col\n",
    "renames     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'Unnamed: 1', 'Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4',\n",
       "               1995,         2000,         2005,         2010,         2015,\n",
       "           '1995.1',     '2000.1',     '2005.1',     '2010.1',     '2015.1',\n",
       "           '1995.2',     '2000.2',     '2005.2',     '2010.2',     '2015.2',\n",
       "               1990,     '1990.1',     '1990.2'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "table5.rename(columns=renames, inplace=True)\n",
    "# set data for 1990 with NaN\n",
    "table5[1990] = np.nan\n",
    "table5['1990.1'] = np.nan\n",
    "table5['1990.2'] = np.nan\n",
    "table5.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 4770 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                                                          Non-Null Count  Dtype  \n",
      "---  ------                                                          --------------  -----  \n",
      " 0   Country Code                                                    4770 non-null   int64  \n",
      " 1   year                                                            4770 non-null   int64  \n",
      " 2   Annual rate of change of the migrant stock for last five years  3930 non-null   float64\n",
      " 3   gender                                                          4770 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 186.3 KB\n"
     ]
    }
   ],
   "source": [
    "table5 = update_tables(table5, 'Annual rate of change of the migrant stock for last five years')\n",
    "table5.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Process table 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'Unnamed: 1', 'Unnamed: 2', 'Unnamed: 3', 'Unnamed: 4',\n",
       "               1990,         1995,         2000,         2005,         2010,\n",
       "               2015,     '1990.1',     '1995.1',     '2000.1',     '2005.1',\n",
       "           '2010.1',     '2015.1',  '1990-1995',  '1995-2000',  '2000-2005',\n",
       "        '2005-2010',  '2010-2015'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "table6 = pd.read_excel(excel_name, sheet_name=\"Table 6\", header=15)\n",
    "table6.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1590 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                               Non-Null Count  Dtype  \n",
      "---  ------                               --------------  -----  \n",
      " 0   Country Code                         1590 non-null   int64  \n",
      " 1   year                                 1590 non-null   int64  \n",
      " 2   Estimated refugee stock at mid-year  1579 non-null   float64\n",
      " 3   gender                               1590 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 49.8 KB\n"
     ]
    }
   ],
   "source": [
    "# First sub-table for \"Estimated refugee stock at mid-year\"\n",
    "table6_1 = table6[['Unnamed: 3', 1990, 1995, 2000, 2005, 2010, 2015]]\n",
    "table6_1 = update_one_table(table6_1, 'Estimated refugee stock at mid-year', 'both sexes')\n",
    "table6_1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1590 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                                                       Non-Null Count  Dtype  \n",
      "---  ------                                                       --------------  -----  \n",
      " 0   Country Code                                                 1590 non-null   int64  \n",
      " 1   year                                                         1590 non-null   int64  \n",
      " 2   Refugees as a percentage of the international migrant stock  1575 non-null   float64\n",
      " 3   gender                                                       1590 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 49.8 KB\n"
     ]
    }
   ],
   "source": [
    "# Second sub-table for \"Refugees as a percentage of the international migrant stock\"\n",
    "table6_2 = table6[['Unnamed: 3', '1990.1', '1995.1', '2000.1', '2005.1', '2010.1', '2015.1']]\n",
    "# Remove .1 such that columns are reconginzed by update_one_table\n",
    "table6_2 = table6_2.rename(columns={col: (int(col[:-2]) if col.find('.') > -1 else col) for col in table6_2.columns})\n",
    "table6_2 = update_one_table(table6_2, 'Refugees as a percentage of the international migrant stock', 'both sexes')\n",
    "table6_2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1590 entries, 0 to 1589\n",
      "Data columns (total 4 columns):\n",
      " #   Column                                                          Non-Null Count  Dtype  \n",
      "---  ------                                                          --------------  -----  \n",
      " 0   Country Code                                                    1590 non-null   int64  \n",
      " 1   year                                                            1590 non-null   int64  \n",
      " 2   Annual rate of change of the refugee stock for last five years  890 non-null    float64\n",
      " 3   gender                                                          1590 non-null   string \n",
      "dtypes: float64(1), int64(2), string(1)\n",
      "memory usage: 49.8 KB\n"
     ]
    }
   ],
   "source": [
    "# Third sub-table for \"Annual rate of change of the refugee stock\"\n",
    "table6_3 = table6[['Unnamed: 3', '1990-1995', '1995-2000', '2000-2005', '2005-2010', '2010-2015']]\n",
    "# Rename columns year1-year5 to year5\n",
    "table6_3 = table6_3.rename(columns={col: (int(col[5:]) if col.find('-') > -1 else col) for col in table6_3.columns})\n",
    "# Set 1990 to NaN\n",
    "table6_3[1990] = np.nan\n",
    "table6_3 = update_one_table(table6_3, 'Annual rate of change of the refugee stock for last five years', 'both sexes')\n",
    "table6_3.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Merge tables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 4770 entries, 0 to 4769\n",
      "Data columns (total 11 columns):\n",
      " #   Column                                                               Non-Null Count  Dtype  \n",
      "---  ------                                                               --------------  -----  \n",
      " 0   Country Code                                                         4770 non-null   int64  \n",
      " 1   year                                                                 4770 non-null   int64  \n",
      " 2   International migrant stock at mid-year                              4725 non-null   float64\n",
      " 3   gender                                                               4770 non-null   string \n",
      " 4   Total population at mid-year                                         4386 non-null   float64\n",
      " 5   International migrant stock as a percentage of the total population  4343 non-null   float64\n",
      " 6   Migrants as a percentage of the international migrant stock          1575 non-null   float64\n",
      " 7   Annual rate of change of the migrant stock for last five years       3930 non-null   float64\n",
      " 8   Estimated refugee stock at mid-year                                  1579 non-null   float64\n",
      " 9   Refugees as a percentage of the international migrant stock          1575 non-null   float64\n",
      " 10  Annual rate of change of the refugee stock for last five years       890 non-null    float64\n",
      "dtypes: float64(8), int64(2), string(1)\n",
      "memory usage: 447.2 KB\n"
     ]
    }
   ],
   "source": [
    "table_all = pd.merge(table1, table2, how=\"outer\", on=['Country Code', 'year', 'gender'])\n",
    "table_all = pd.merge(table_all, table3, how=\"outer\", on=['Country Code', 'year', 'gender'])\n",
    "table_all = pd.merge(table_all, table4, how=\"outer\", on=['Country Code', 'year', 'gender'])\n",
    "table_all = pd.merge(table_all, table5, how=\"outer\", on=['Country Code', 'year', 'gender'])\n",
    "table_all = pd.merge(table_all, table6_1, how=\"outer\", on=['Country Code', 'year', 'gender'])\n",
    "table_all = pd.merge(table_all, table6_2, how=\"outer\", on=['Country Code', 'year', 'gender'])\n",
    "table_all = pd.merge(table_all, table6_3, how=\"outer\", on=['Country Code', 'year', 'gender'])\n",
    "table_all.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country Code</th>\n",
       "      <th>year</th>\n",
       "      <th>International migrant stock at mid-year</th>\n",
       "      <th>gender</th>\n",
       "      <th>Total population at mid-year</th>\n",
       "      <th>International migrant stock as a percentage of the total population</th>\n",
       "      <th>Migrants as a percentage of the international migrant stock</th>\n",
       "      <th>Annual rate of change of the migrant stock for last five years</th>\n",
       "      <th>Estimated refugee stock at mid-year</th>\n",
       "      <th>Refugees as a percentage of the international migrant stock</th>\n",
       "      <th>Annual rate of change of the refugee stock for last five years</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>900</td>\n",
       "      <td>1990</td>\n",
       "      <td>152563212.0</td>\n",
       "      <td>both sexes</td>\n",
       "      <td>5309667.699</td>\n",
       "      <td>2.873310</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18836571.0</td>\n",
       "      <td>12.346732</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>901</td>\n",
       "      <td>1990</td>\n",
       "      <td>82378628.0</td>\n",
       "      <td>both sexes</td>\n",
       "      <td>1144463.062</td>\n",
       "      <td>7.198015</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2014564.0</td>\n",
       "      <td>2.445494</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>902</td>\n",
       "      <td>1990</td>\n",
       "      <td>70184584.0</td>\n",
       "      <td>both sexes</td>\n",
       "      <td>4165204.637</td>\n",
       "      <td>1.685021</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>16822007.0</td>\n",
       "      <td>23.968236</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>941</td>\n",
       "      <td>1990</td>\n",
       "      <td>11075966.0</td>\n",
       "      <td>both sexes</td>\n",
       "      <td>510057.629</td>\n",
       "      <td>2.171513</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5048391.0</td>\n",
       "      <td>45.565880</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>934</td>\n",
       "      <td>1990</td>\n",
       "      <td>59105261.0</td>\n",
       "      <td>both sexes</td>\n",
       "      <td>3655147.008</td>\n",
       "      <td>1.617042</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11773616.0</td>\n",
       "      <td>19.919743</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4765</th>\n",
       "      <td>882</td>\n",
       "      <td>2015</td>\n",
       "      <td>2460.0</td>\n",
       "      <td>female</td>\n",
       "      <td>93.584</td>\n",
       "      <td>2.628654</td>\n",
       "      <td>49.908704</td>\n",
       "      <td>-0.545343</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4766</th>\n",
       "      <td>772</td>\n",
       "      <td>2015</td>\n",
       "      <td>254.0</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52.156057</td>\n",
       "      <td>2.603250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4767</th>\n",
       "      <td>776</td>\n",
       "      <td>2015</td>\n",
       "      <td>2604.0</td>\n",
       "      <td>female</td>\n",
       "      <td>52.931</td>\n",
       "      <td>4.919612</td>\n",
       "      <td>45.437096</td>\n",
       "      <td>2.526318</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4768</th>\n",
       "      <td>798</td>\n",
       "      <td>2015</td>\n",
       "      <td>63.0</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>44.680851</td>\n",
       "      <td>-1.819436</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4769</th>\n",
       "      <td>876</td>\n",
       "      <td>2015</td>\n",
       "      <td>1411.0</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>49.526150</td>\n",
       "      <td>0.516899</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4770 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Country Code  year  International migrant stock at mid-year      gender  \\\n",
       "0              900  1990                              152563212.0  both sexes   \n",
       "1              901  1990                               82378628.0  both sexes   \n",
       "2              902  1990                               70184584.0  both sexes   \n",
       "3              941  1990                               11075966.0  both sexes   \n",
       "4              934  1990                               59105261.0  both sexes   \n",
       "...            ...   ...                                      ...         ...   \n",
       "4765           882  2015                                   2460.0      female   \n",
       "4766           772  2015                                    254.0      female   \n",
       "4767           776  2015                                   2604.0      female   \n",
       "4768           798  2015                                     63.0      female   \n",
       "4769           876  2015                                   1411.0      female   \n",
       "\n",
       "      Total population at mid-year  \\\n",
       "0                      5309667.699   \n",
       "1                      1144463.062   \n",
       "2                      4165204.637   \n",
       "3                       510057.629   \n",
       "4                      3655147.008   \n",
       "...                            ...   \n",
       "4765                        93.584   \n",
       "4766                           NaN   \n",
       "4767                        52.931   \n",
       "4768                           NaN   \n",
       "4769                           NaN   \n",
       "\n",
       "      International migrant stock as a percentage of the total population  \\\n",
       "0                                              2.873310                     \n",
       "1                                              7.198015                     \n",
       "2                                              1.685021                     \n",
       "3                                              2.171513                     \n",
       "4                                              1.617042                     \n",
       "...                                                 ...                     \n",
       "4765                                           2.628654                     \n",
       "4766                                                NaN                     \n",
       "4767                                           4.919612                     \n",
       "4768                                                NaN                     \n",
       "4769                                                NaN                     \n",
       "\n",
       "      Migrants as a percentage of the international migrant stock  \\\n",
       "0                                                   NaN             \n",
       "1                                                   NaN             \n",
       "2                                                   NaN             \n",
       "3                                                   NaN             \n",
       "4                                                   NaN             \n",
       "...                                                 ...             \n",
       "4765                                          49.908704             \n",
       "4766                                          52.156057             \n",
       "4767                                          45.437096             \n",
       "4768                                          44.680851             \n",
       "4769                                          49.526150             \n",
       "\n",
       "      Annual rate of change of the migrant stock for last five years  \\\n",
       "0                                                   NaN                \n",
       "1                                                   NaN                \n",
       "2                                                   NaN                \n",
       "3                                                   NaN                \n",
       "4                                                   NaN                \n",
       "...                                                 ...                \n",
       "4765                                          -0.545343                \n",
       "4766                                           2.603250                \n",
       "4767                                           2.526318                \n",
       "4768                                          -1.819436                \n",
       "4769                                           0.516899                \n",
       "\n",
       "      Estimated refugee stock at mid-year  \\\n",
       "0                              18836571.0   \n",
       "1                               2014564.0   \n",
       "2                              16822007.0   \n",
       "3                               5048391.0   \n",
       "4                              11773616.0   \n",
       "...                                   ...   \n",
       "4765                                  NaN   \n",
       "4766                                  NaN   \n",
       "4767                                  NaN   \n",
       "4768                                  NaN   \n",
       "4769                                  NaN   \n",
       "\n",
       "      Refugees as a percentage of the international migrant stock  \\\n",
       "0                                             12.346732             \n",
       "1                                              2.445494             \n",
       "2                                             23.968236             \n",
       "3                                             45.565880             \n",
       "4                                             19.919743             \n",
       "...                                                 ...             \n",
       "4765                                                NaN             \n",
       "4766                                                NaN             \n",
       "4767                                                NaN             \n",
       "4768                                                NaN             \n",
       "4769                                                NaN             \n",
       "\n",
       "      Annual rate of change of the refugee stock for last five years  \n",
       "0                                                   NaN               \n",
       "1                                                   NaN               \n",
       "2                                                   NaN               \n",
       "3                                                   NaN               \n",
       "4                                                   NaN               \n",
       "...                                                 ...               \n",
       "4765                                                NaN               \n",
       "4766                                                NaN               \n",
       "4767                                                NaN               \n",
       "4768                                                NaN               \n",
       "4769                                                NaN               \n",
       "\n",
       "[4770 rows x 11 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "table_all"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
